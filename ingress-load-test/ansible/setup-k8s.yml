---
- hosts: master, nodes
  become: true
  gather_facts: no
  tasks:
  - name: Wait 300 seconds, but only start checking after 60 seconds
    wait_for_connection:
      delay: 2
      timeout: 20
  
  - name: Update apt packages
    apt:
      upgrade: no
      update_cache: yes
      cache_valid_time: 86400
    
  - name: Generate /etc/hosts file
    template:
      src=templates/hosts_template.j2
      dest=/etc/hosts

  - name: "update hostnames"
    hostname:
      name: "{{ short }}"

- hosts: master, nodes
  become: true
  gather_facts: no
  tasks:
  - name: Make the Swap inactive
    command: swapoff -a
  - name: Remove Swap entry from /etc/fstab.
    lineinfile:
      dest: /etc/fstab
      regexp: swap
      state: absent

  - name: Installing Prerequisites for Kubernetes
    apt: 
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
        - software-properties-common
      state: present

  - name: Add Dockerâ€™s official GPG key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add Docker Repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present
      filename: docker
      mode: 0600

  - name: Update apt packages
    apt:
      upgrade: no
      update_cache: yes
      cache_valid_time: 86400

  - name: Install Docker Engine.
    apt: 
      name:
        - docker-ce={{docker_version}}
        - docker-ce-cli={{docker_version}}
        - containerd.io={{containerd_version}}
      state: present

  - name: Enable service docker, and enable persistently
    service: 
      name: docker
      enabled: yes

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Update apt packages
    apt:
      upgrade: no
      update_cache: yes
      cache_valid_time: 86400


  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet={{k8s_version}}
        - kubeadm={{k8s_version}}
        - kubectl={{k8s_version}}

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted


- hosts: master
  become: true
  gather_facts: no
  tasks:
  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="{{node_ip}}" --pod-network-cidr=10.244.0.0/16

  - name: Setup kubeconfig for user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/{{ ansible_user }}/.kube
     - cp -i /etc/kubernetes/admin.conf /home/{{ ansible_user }}/.kube/config
     - chown {{ ansible_user }}:{{ ansible_user }} /home/{{ ansible_user }}/.kube/config

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - debug:
      msg: "{{ join_command.stdout }}"

  - name: Copy join command to local file.
    become: no
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777

  - name: Configure kubectl command auto completion.
    lineinfile:
      dest: /home/{{ ansible_user }}/.bashrc
      line: 'source <(kubectl completion bash)'
      insertafter: EOF

- hosts: nodes
  become: true
  gather_facts: false
  tasks:
   - name: Copy join command to worker nodes.
     become: yes
     become_method: sudo
     become_user: root   
     copy:
       src: /tmp/kubernetes_join_command
       dest: /tmp/kubernetes_join_command
       mode: 0777   
   - name: Join the Worker nodes with the master.
     become: yes
     become_method: sudo
     become_user: root  
     command: sh /tmp/kubernetes_join_command
     register: joined_or_not
   - debug:
       msg: "{{ joined_or_not.stdout }}"

